# This is a basic workflow to help you get started with Actions

name: 'Elastic Beanstalk Deployment'
description: 'Create Deployment Pipeline'
author: 'Shivam <findme@kshivam.com>'
branding:
  icon: 'check-circle'  
  color: 'purple'

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
inputs:
  EB-BUCKET-NAME: 
    description : 'Enter The Name of the S3 Bucket'
    required : true
  APPLICATION-NAME: 
    description : 'Enter the name of the Elastic BeanStalk Application'
    required : true
  EB-ENV-NAME: 
    description : 'Name of the Elastic beanstalk Environment'
    required : true
  DEPLOY-PACKAGE-NAME: "Application-${{ github.sha }}.zip"
  AWS-REGION: 
    description : 'Enter the Region'
    required : true
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  my-ci-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: clone-our-repo
        uses: actions/checkout@v2
      - name: create zip file
        run: zip -r ${{ inputs.DEPLOY-PACKAGE-NAME }} ./ -x *.git*
      - name: configure aws auth
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ inputs.AWS-REGION }}
      - name: copy deployment package to s3
        run: aws s3 cp ${{ inputs.DEPLOY-PACKAGE-NAME }} s3://${{ inputs.EB-BUCKET-NAME }}/${{ inputs.DEPLOY-PACKAGE-NAME }}
      - name: Message on completion of CI Pipeline
        run: echo "CI Pipeline part finished successfully"
  my-cd-pipeline:
       runs-on: ubuntu-latest
       needs: [my-ci-pipeline]
       steps:
         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@v1
           with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
            aws-region: ${{ inputs.AWS-REGION }}
         
         - name: Create new ElasticBeanstalk Applicaiton Version
           run : |
            aws elasticbeanstalk create-application-version \
            --application-name ${{ inputs.APPLICATION-NAME }} \
            --source-bundle S3Bucket="${{ inputs.EB-BUCKET-NAME }}",S3Key="${{ inputs.DEPLOY-PACKAGE-NAME }}" \
            --version-label "Ver-${{ github.sha }}" \
            --description "CommitSHA-${{ github.sha }}"
         - name: Deploy our new Application Version
           run : aws elasticbeanstalk update-environment --environment-name ${{ inputs.EB-ENV-NAME }} --version-label "Ver-${{ github.sha }}"
           
         - name: Message on completion of CD Pipeline
           run : echo "CD Pipeline part finished successfully"  
      
  
  
